"""change_all_ids_to_uuid

Revision ID: ee5b778a29a4
Revises: 6fb84642ef21
Create Date: 2025-08-24 20:17:10.617355

"""

from collections.abc import Sequence

from sqlalchemy import text

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ee5b778a29a4"
down_revision: str | Sequence[str] | None = "6fb84642ef21"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop existing id columns and add uuid_id as primary key for each table
    tables = [
        "player_gameweek_history_2016_17",
        "player_gameweek_history_2017_18",
        "player_gameweek_history_2018_19",
        "player_gameweek_history_2019_20",
        "player_gameweek_history_2020_21",
        "player_gameweek_history_2021_22",
        "player_gameweek_history_2022_23",
        "player_gameweek_history_2023_24",
    ]

    for table in tables:
        # Drop the old serial id column and its constraint
        op.execute(text(f"ALTER TABLE {table} DROP CONSTRAINT {table}_pkey"))
        op.drop_column(table, "id")

        # Rename uuid_id to id and make it primary key
        op.execute(text(f"ALTER TABLE {table} RENAME COLUMN uuid_id TO id"))
        op.execute(text(f"ALTER TABLE {table} ADD PRIMARY KEY (id)"))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Reverse the changes - add back serial id and rename id to uuid_id
    tables = [
        "player_gameweek_history_2016_17",
        "player_gameweek_history_2017_18",
        "player_gameweek_history_2018_19",
        "player_gameweek_history_2019_20",
        "player_gameweek_history_2020_21",
        "player_gameweek_history_2021_22",
        "player_gameweek_history_2022_23",
        "player_gameweek_history_2023_24",
    ]

    for table in tables:
        # Drop the uuid primary key constraint
        op.execute(text(f"ALTER TABLE {table} DROP CONSTRAINT {table}_pkey"))

        # Rename id back to uuid_id
        op.execute(text(f"ALTER TABLE {table} RENAME COLUMN id TO uuid_id"))

        # Add back the serial id column as primary key
        op.execute(text(f"ALTER TABLE {table} ADD COLUMN id SERIAL PRIMARY KEY"))

    # ### end Alembic commands ###
