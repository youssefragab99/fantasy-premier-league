"""database_setup

Revision ID: 55c1bfe77010
Revises: ae7f68270204
Create Date: 2025-08-11 13:01:39.353447

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "55c1bfe77010"
down_revision: str | Sequence[str] | None = "ae7f68270204"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "teams",
        sa.Column("id", sa.Integer(), nullable=False, comment="Team ID from the FPL API"),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("short_name", sa.String(length=3), nullable=False),
        sa.Column("strength", sa.Integer(), nullable=True),
        sa.Column("strength_attack_home", sa.Integer(), nullable=True),
        sa.Column("strength_attack_away", sa.Integer(), nullable=True),
        sa.Column("strength_defence_home", sa.Integer(), nullable=True),
        sa.Column("strength_defence_away", sa.Integer(), nullable=True),
        sa.Column("strength_overall_home", sa.Integer(), nullable=True),
        sa.Column("strength_overall_away", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "players",
        sa.Column("id", sa.Integer(), nullable=False, comment="Player ID from the FPL API"),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("second_name", sa.String(length=100), nullable=False),
        sa.Column("web_name", sa.String(length=100), nullable=True),
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column(
            "element_type",
            sa.Integer(),
            nullable=False,
            comment="Player's position: 1=GK, 2=DEF, 3=MID, 4=FWD",
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "player_gameweek_history",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("gameweek", sa.Integer(), nullable=False),
        sa.Column("season", sa.String(length=10), nullable=False, comment="e.g., '2024-25'"),
        sa.Column("fixture_id", sa.Integer(), nullable=False),
        sa.Column("opponent_team_id", sa.Integer(), nullable=False),
        sa.Column("total_points", sa.Integer(), nullable=False),
        sa.Column("was_home", sa.Boolean(), nullable=False),
        sa.Column("kickoff_time", sa.DateTime(), nullable=True),
        sa.Column("team_h_score", sa.Integer(), nullable=True),
        sa.Column("team_a_score", sa.Integer(), nullable=True),
        sa.Column("minutes", sa.Integer(), nullable=False),
        sa.Column("goals_scored", sa.Integer(), nullable=False),
        sa.Column("assists", sa.Integer(), nullable=False),
        sa.Column("clean_sheets", sa.Integer(), nullable=False),
        sa.Column("goals_conceded", sa.Integer(), nullable=False),
        sa.Column("own_goals", sa.Integer(), nullable=False),
        sa.Column("penalties_saved", sa.Integer(), nullable=False),
        sa.Column("penalties_missed", sa.Integer(), nullable=False),
        sa.Column("yellow_cards", sa.Integer(), nullable=False),
        sa.Column("red_cards", sa.Integer(), nullable=False),
        sa.Column("saves", sa.Integer(), nullable=False),
        sa.Column("bonus", sa.Integer(), nullable=False),
        sa.Column("bps", sa.Integer(), nullable=False, comment="Bonus Points System score"),
        sa.Column("influence", sa.Float(), nullable=True),
        sa.Column("creativity", sa.Float(), nullable=True),
        sa.Column("threat", sa.Float(), nullable=True),
        sa.Column("ict_index", sa.Float(), nullable=True),
        sa.Column(
            "value", sa.Integer(), nullable=True, comment="Player cost at the time of the gameweek"
        ),
        sa.Column(
            "selected",
            sa.Integer(),
            nullable=True,
            comment="Number of managers who selected the player",
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.id"],
        ),
        sa.ForeignKeyConstraint(
            ["opponent_team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("player_id", "gameweek", "season", name="uq_player_gameweek_season"),
    )
    op.create_index(
        op.f("ix_player_gameweek_history_player_id"),
        "player_gameweek_history",
        ["player_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_player_gameweek_history_gameweek"),
        "player_gameweek_history",
        ["gameweek"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_player_gameweek_history_gameweek"), table_name="player_gameweek_history")
    op.drop_index(
        op.f("ix_player_gameweek_history_player_id"), table_name="player_gameweek_history"
    )
    op.drop_table("player_gameweek_history")
    op.drop_table("players")
    op.drop_table("teams")
    # ### end Alembic commands ###
