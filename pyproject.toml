############################################################
# Project configuration for the fantasy-premier-league repo #
############################################################

[build-system]
requires = ["hatchling>=1.24.2"]
build-backend = "hatchling.build"

[project]
name = "fantasy-premier-league"
version = "0.1.0"
description = "Utilities and analysis for Fantasy Premier League."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Youssef Ragab", email = "yragab99@gmail.com" }]
keywords = ["fantasy", "premier league", "football", "fpl"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
]

# Add runtime dependencies here, e.g. ["requests>=2.32.0"].
dependencies = [
    "ruff>=0.5.0",
    "black>=24.3.0",
    "isort>=5.13.2",
    "mypy>=1.10.0",
    "pytest>=8.2.0",
    "pytest-cov>=5.0.0",
    "ipykernel>=6.29.0",
    "types-requests>=2.32.0.20240602",
    "psycopg2-binary>=2.9.10",
    "alembic>=1.16.4",
    "mako>=1.3.10",
    "markupsafe>=3.0.2",
    "sqlalchemy>=2.0.42",
    "typing-extensions>=4.14.1",
]

[project.urls]
"Source" = "https://github.com/youssefragab/fantasy-premier-league"
"Issues" = "https://github.com/youssefragab/fantasy-premier-league/issues"
[tool.ruff]
target-version = "py310"
line-length = 120
exclude = ["build", "dist", ".venv", ".git", ".tox", ".mypy_cache"]
fix = true

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "SIM", "PL", "RUF"]
ignore = ["E501"]

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"

[tool.black]
line-length = 100
target-version = ["py310"]
extend-exclude = '''
(
  ^.venv/
  | ^build/
  | ^dist/
)
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = []
known_third_party = []

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
strict_equality = true
pretty = true
show_error_codes = true
exclude = '^(build|dist|\.venv|\.mypy_cache)/'
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config --disable-warnings"
testpaths = ["tests"]
xfail_strict = true

[tool.coverage.run]
branch = true
source = ["."]
omit = ["tests/*", "build/*", "dist/*", ".venv/*"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if __name__ == \"__main__\":"]
skip_empty = true
show_missing = true
fail_under = 0
