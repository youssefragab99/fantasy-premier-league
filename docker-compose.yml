services:
  db:
    image: postgres:16-alpine
    container_name: fpl-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fpl}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fplpassword}
      POSTGRES_DB: ${POSTGRES_DB:-fpldb}
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database_dumps:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fpl} -d ${POSTGRES_DB:-fpldb} -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 15

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fpl-app
    environment:
      # Database connection
      POSTGRES_USER: ${POSTGRES_USER:-fpl}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fplpassword}
      POSTGRES_DB: ${POSTGRES_DB:-fpldb}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_INTERNAL_PORT:-5432}
      DATABASE_URL: postgresql://${POSTGRES_USER:-fpl}:${POSTGRES_PASSWORD:-fplpassword}@${DB_HOST:-db}:${DB_INTERNAL_PORT:-5432}/${POSTGRES_DB:-fpldb}
      
      # Control data loading behavior
      SKIP_DATA_LOADING: ${SKIP_DATA_LOADING:-false}
      KEEP_RUNNING: ${KEEP_RUNNING:-false}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Optional: mount for development
      - ${PWD}:/app:${MOUNT_MODE:-ro}
    # Remove command since we use entrypoint

volumes:
  pgdata:

